import discord
from discord.ext import commands
import json

class Verif(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def good(self, ctx):
        with open (f"./{ctx.guild.id}/data.json", "r") as f:
            data = json.load(f)
            ticketlist = data["ticketlist"]
        if not str(ctx.channel) in ticketlist:
            await ctx.reply('Vous devez utiliser cette commande dans un ticket.')
        elif str(ctx.channel) in ticketlist:
            ticket = data[f"{ctx.channel}"]
            step = ticket.get("verif")
            if step == '1':
                step = '2'
                data[f'{ctx.channel}'] = {"chanid":f"{ctx.channel.id}","verif":f"{step}"}
                with open (f"./{ctx.guild.id}/data.json", "w") as t:
                    json.dump(data, t)
                embed = discord.Embed(title="Ticket", description="VÃ©rification passÃ©e avec succÃ¨s !", color=discord.Color.from_rgb(17, 100, 20))
                await ctx.reply(embed=embed)
            else:
                return
    
    @commands.command()
    async def addverif(self, ctx):
        with open (f"./{ctx.guild.id}/data.json", "r") as f:
            data = json.load(f)
            ticketlist = data["ticketlist"]
        if str(ctx.channel) in ticketlist:
            await ctx.reply('Vous devez utiliser cette commande dans un ticket qui n\'est pas dÃ©jÃ  en vÃ©rification.')
        else:
            chan = ctx.channel
            if "ticket" in str(chan):    
                if not str(chan) in ticketlist:
                    data.get("ticketlist", {}).append(str(chan))
                    data[f"{chan}"] = {"chanid":f"{chan.id}", "verif":"1"}
                    with open (f"./{chan.guild.id}/data.json", "w") as t:
                        json.dump(data, t)  
                    embed = discord.Embed(title="Ticket", description="Hello !\n\nJe viens t'aider afin de vÃ©rifier que tu as bien respectÃ© quelques points dans ta fiche avant que les staffiens viennent corriger ta fiche. Lis bien jusqu'au bout, et n'oublie pas d'envoyer ta fiche en Gdoc <:Owiiii:920291924626264125>", color=discord.Color.from_rgb(17, 100, 20))
                    embed.add_field(name="Mise en page", value="âœ“ Toutes les catÃ©gories doivent Ãªtre prÃ©sentent et dans le bon ordre\nâœ“ Les titres doivent Ãªtre visible (soulignÃ©s, en gras, comme vous voulez du moment qu'ils sont apparents !)", inline=False)
                    embed.add_field(name="IdentitÃ©", value="âœ“ Le prÃ©nom ne doit pas dÃ©jÃ  Ãªtre pris par quelqu'un\nâœ“ L'Ã¢ge minimum est de 14 ans sur le RP\nâœ“ VÃ©rifie que le rÃ´le que tu souhaites est disponible dans <#842659580944711692> / <#748139611867578368>", inline=False)
                    embed.add_field(name="PersonnalitÃ©", value="âœ“ DÃ©veloppe bien le caractÃ¨re\nâœ“ DÃ©tester n'est pas avoir peur, la phobie doit en Ãªtre une !", inline=False)
                    embed.add_field(name="Physique", value="âœ“ DÃ©veloppe bien le physique\nâœ“ Les qualitÃ©s / dÃ©fauts doivent Ãªtre Ã©quilibrÃ©s (autant de l'un que de l'autre) et en liste de course", inline=False)
                    embed.add_field(name="CapacitÃ©", value="âœ“ La capacitÃ© ne doit pas dÃ©jÃ  Ãªtre dans <#748216694442557471>\nâœ“ DÃ©cris la bien avec les limites (temps, rayon, personnes influencÃ©es...)\nâœ“ N'oublie pas de mettre la maÃ®trise sur 10 !", inline=False)
                    embed.add_field(name="Relationnel", value="âœ“ N'oublie pas le nom et prÃ©nom des parents", inline=False)
                    embed.add_field(name="Ensuite ?", value="*AprÃ¨s avoir vÃ©rifiÃ© tout Ã§a, tu pourras faire juste en-dessous **&good** ! Nous viendrons corriger un peu aprÃ¨s. Merci d\'avance~* <:LoveForYou:774967995205287976>", inline=False)
                    await ctx.send(embed=embed)
    
    @commands.command()
    @commands.has_role('âˆµğŸš”âˆ´ Staffiens âˆµğŸš”âˆ´')
    async def verif(self, ctx, reason = None):
        with open (f"./{ctx.guild.id}/data.json", "r") as f:
            data = json.load(f)
            ticketlist = data["ticketlist"]
        if not str(ctx.channel) in ticketlist:
            await ctx.reply('Vous devez utiliser cette commande dans un ticket.')
        elif str(ctx.channel) in ticketlist:
            ticket = data[f"{ctx.channel}"]
            step = ticket.get("verif")
            if reason == 'back':
                if step == '1':
                    await ctx.reply('Vous ne pouvez pas revenir plus en arriÃ¨re.')
                elif step == '2':
                    step = '1'
                    data[f'{ctx.channel}'] = {"chanid":f"{ctx.channel.id}","verif":f"{step}"}
                    with open (f"./{ctx.guild.id}/data.json", "w") as t:
                        json.dump(data, t)
                    embed = discord.Embed(title="Ticket", description="Retour en arriÃ¨re passÃ©e avec succÃ¨s !", color=discord.Color.from_rgb(17, 100, 20))
                    await ctx.reply(embed=embed)
                elif step == '3':
                    step = '2'
                    data[f'{ctx.channel}'] = {"chanid":f"{ctx.channel.id}","verif":f"{step}"}
                    with open (f"./{ctx.guild.id}/data.json", "w") as t:
                        json.dump(data, t)
                    embed = discord.Embed(title="Ticket", description="Retour en arriÃ¨re passÃ©e avec succÃ¨s !", color=discord.Color.from_rgb(17, 100, 20))
                    await ctx.reply(embed=embed)
                elif step == 'close':
                    step = '3'
                    data[f'{ctx.channel}'] = {"chanid":f"{ctx.channel.id}","verif":f"{step}"}
                    with open (f"./{ctx.guild.id}/data.json", "w") as t:
                        json.dump(data, t)
                    embed = discord.Embed(title="Ticket", description="Retour en arriÃ¨re passÃ©e avec succÃ¨s !", color=discord.Color.from_rgb(17, 100, 20))
                    await ctx.reply(embed=embed)
                return
            if step == '2':
                step = '3'
                data[f'{ctx.channel}'] = {"chanid":f"{ctx.channel.id}","verif":f"{step}"}
                with open (f"./{ctx.guild.id}/data.json", "w") as t:
                    json.dump(data, t)
                embed = discord.Embed(title="Ticket", description="VÃ©rification passÃ©e avec succÃ¨s !", color=discord.Color.from_rgb(17, 100, 20))
                await ctx.reply(embed=embed)
                return
            if step == '3':
                data[f'{ctx.channel}'] = {"chanid":f"{ctx.channel.id}","verif":f"close"}
                with open (f"./{ctx.guild.id}/data.json", "w") as t:
                    json.dump(data, t)
                embed = discord.Embed(title="Ticket", description="VÃ©rification passÃ©e avec succÃ¨s !", color=discord.Color.from_rgb(17, 100, 20))
                await ctx.reply(embed=embed)
                return          
                
    @commands.command()
    @commands.has_role('âˆµğŸš”âˆ´ Staffiens âˆµğŸš”âˆ´')
    async def veriflist(self, ctx):
        embed = discord.Embed(title="Ticket list", description="Liste des tickets Ã  vÃ©rifier !", color=discord.Color.from_rgb(17, 100, 20))
        with open (f"./{ctx.guild.id}/data.json", "r") as f:
            data = json.load(f)
            ticketlist = data["ticketlist"]
            
        for ticket in ticketlist:
            ticketname = ticket
            ticket = data[f"{ticket}"]
            
            if str(ticket.get("verif")) != 'close':
                ticketdir = ticket.get("chanid")
                verif = ticket.get("verif")
                embed.add_field(name=f"{ticketname}", value=f"<#{ticketdir}> Etape de vÃ©rification : **{verif}**", inline=False)
                
        embed.set_footer(text="Bot by LoliChann", icon_url=f"https://i.pinimg.com/564x/d5/d6/ff/d5d6ff7f3a344085dbffc4a9a34f538e.jpg")    
        await ctx.send(embed=embed)
                
def setup(bot):
    bot.add_cog(Verif(bot))
